on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'application/**'
      - '.github/workflows/workflow.build.core.yml'

  pull_request:
    branches: [ "main" ]
    paths:
      - 'application/**'
      - '.github/workflows/workflow.build.core.yml'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build    
      run: |
        cd ./application/core
        go get
        go build

    - name: Test
      id: test
      continue-on-error: false
      run: |
       cd ./application/core
       GIN_MODE=release go test -v
    
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Build image for Azure container registry'
      run: |
        cd ./application/core
        docker build -t testing .
        docker run --name go_bash --rm -it test bash
        docker exec go_bash curl localhost:8080/albums
        az acr build --image randommatch/api-core:${{ github.sha }}-${{ github.run_id }} \
        --registry randommatchakscr \
        --file ./Dockerfile .
    
    # - name: 'Package helm chart and save it to Azure container Registry'
    #   env: 
    #     NAMESPACE: "randommatch"
    #     ACR_NAME: "randommatchakscr"
    #     HELM_REPO: "helm/sock-shop"
    #     VERSION: "0.3.0"
    #   run: |
    #     cd ./application/sock-shop
    #     helm dependencies build && helm lint . && helm package .
    #     echo ${{ secrets.ARM_CLIENT_SECRET}} | helm registry login ${ACR_NAME}.azurecr.io \
    #     --username ${{ secrets.ARM_CLIENT_ID }} --password-stdin
    #     az acr repository delete --name ${ACR_NAME} --image ${HELM_REPO}:${VERSION} --yes || true
    #     helm push sock-shop-${VERSION}.tgz oci://${ACR_NAME}.azurecr.io/helm
    #     az aks get-credentials --resource-group randommatchaksrg --name randommatchaksk8s
    #     helm install myhelmtest oci://${ACR_NAME}.azurecr.io/${HELM_REPO} --version ${VERSION} \
    #     --namespace ${NAMESPACE} --create-namespace
    #     kubectl get pods --namespace ${NAMESPACE}
       

# helm uninstall myhelmtest --namespace ${NAMESPACE}
# kubectl delete namespace ${NAMESPACE}
# helm install myhelmtest oci://$ACR_NAME.azurecr.io/helm/hello-world --version 0.1.0
# helm uninstall myhelmtest
# az acr repository delete --name $ACR_NAME --image helm/hello-world:0.1.0
# https://docs.microsoft.com/en-us/azure/aks/kubernetes-helm
# https://docs.microsoft.com/en-us/azure/container-registry/container-registry-helm-repos
# https://github.com/microservices-demo/microservices-demo/tree/master/deploy/kubernetes/helm-chart

